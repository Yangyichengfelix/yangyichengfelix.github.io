@page "/fetchdata"

@inject HttpClient Http
@using Toolbelt.Blazor.SpeechSynthesis
@using System.Runtime.InteropServices

@inject NavigationManager NavigationManager

<h1>
    <a href="https://github.com/jsakamoto/Toolbelt.Blazor.SpeechSynthesis" target="_blank">Blazor SpeechSynthesis</a>
    <a href="https://www.nuget.org/packages/Toolbelt.Blazor.SpeechSynthesis/" target="_blank">
        <img src="https://img.shields.io/nuget/v/Toolbelt.Blazor.SpeechSynthesis.svg" alt="NuGet Package" />
    </a>
</h1>

<p>
    Text:
    <MudTextField T="string"  AutoGrow Lines="10" Label="Multiline" Variant="Variant.Text" @bind-Value="@Text" ></MudTextField>
</p>

@if (Voices.Any())
{
    <p>
        Voice:
        <select @onchange="OnChangeVoice" style="max-width:100%;">
            <option value="@(default(string))">(unset)</option>
            @foreach (var voice in Voices.OrderBy(v => v.Lang).ThenBy(v => v.VoiceURI))
            {
                <option @key="voice.VoiceIdentity" value="@voice.VoiceIdentity" selected="@(voice.VoiceIdentity == this.VoiceId)">@voice.Name (@voice.Lang)</option>
            }
        </select>
    </p>
}


    <MudButton Variant="Variant.Filled" OnClick="OnClickSpeakButton" Color="Color.Success">Speak</MudButton>


<details>
    <summary>More options</summary>
    <div>
        <section>
            <h2>Control</h2>
            <MudButton Variant="Variant.Filled" Color="Color.Secondary" OnClick="OnClickSpeakByCachedButton">Speak by Cached</MudButton>
            <MudButton Variant="Variant.Filled" Color="Color.Secondary" OnClick="OnClickPauseButton">Pause</MudButton>
            <MudButton Variant="Variant.Filled" Color="Color.Secondary" OnClick="OnClickResumeButton">Resume</MudButton>
            <MudButton Variant="Variant.Filled" Color="Color.Secondary" OnClick="OnClickCancelButton">Cancel</MudButton>
            <MudButton Variant="Variant.Filled" Color="Color.Secondary" OnClick="OnClickGC">GC</MudButton>
            <MudButton Variant="Variant.Filled" Color="Color.Secondary" OnClick="OnClickClearLog">Clear Log</MudButton>
        </section>

        <section>
            <h2>Voice options</h2>
            <div style="display:flex; justify-content:space-between; flex-wrap:wrap;">
                <div>Language (BCP47): <input type="text" @bind="Lang" /></div>
                <div>Picth: @Pitch.ToString("0.0") <input type="range" min="0.0" max="2.0" step="0.1" @bind="Pitch" /> <button @onclick="(() => this.Pitch = 1.0)">reset</button></div>
                <div>Rate: @Rate.ToString("0.0") <input type="range" min="0.1" max="10.0" step="0.1" @bind="Rate" /> <button @onclick="(() => this.Rate = 1.0)">reset</button></div>
                <div>Volume: @Volume.ToString("0.0") <input type="range" min="0.0" max="1.0" step="0.1" @bind="Volume" /> <button @onclick="(() => this.Volume = 1.0)">reset</button></div>
            </div>
        </section>

        <section class="status">
            <h2>Status</h2>
            <div class="indicators">
                <div class="@CssClass(new { Active = this.Available })">Available</div>
                <div class="@CssClass(new { Active = this.SpeechSynthesis.Speaking })">Speaking</div>
                <div class="@CssClass(new { Active = this.SpeechSynthesis.Pending })">Pending</div>
                <div class="@CssClass(new { Active = this.SpeechSynthesis.Paused })">Paused</div>
            </div>
        </section>

        <section>
            <h2>Log</h2>
            <div style="background: var(--background);padding: 2.5px 5px;border-radius: 6px;font-family:monospace;min-height:2em;">
                @foreach (var log in Logs)
                {
                    <div>@log</div>
                }
            </div>
        </section>

        <section>
            <h2>Runtime information</h2>
            <p>@RuntimeInformation.FrameworkDescription / @RuntimeInformation.ProcessArchitecture</p>
        </section>

    </div>
</details>